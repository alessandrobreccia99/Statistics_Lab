bsum <- c( mean_btot, var_btot, median(Bpost_tot,space), conf(Bpost_tot,space,0.95)[1], conf(Bpost_tot,space,0.95)[2])
mcmcsum <- c( mean(mcmcu$samples), sd(mcmcu$samples)^2, cumlative_hist(h,0)[1], cumlative_hist(h,0.95)[1], cumlative_hist(h,0.95)[2])
summa <- rbind(bsum,mcmcsum)
rownames(summa) <- c('By integration','MCMC procedure')
colnames(summa) <- c('Mean', 'Variance','Median','Lower bound 95% credibility','Upper bound 95% credibility')
summa <- as.data.frame(round(summa,4))
print(summa)
h <- hist(mcmcj$samples,breaks=200,plot = FALSE)
h$counts <- h$counts/length(h$counts)
plot(h, ylim= c(0,13), main = 'Histogram of the MCMC result, Uniform prior')
lines(grid,Jeffrey_post(grid))
plot(seq(1,100001,by=1),mcmcj$chain, type="l", xlab = "iterations", ylab = "chain positions", main='MCMC chain')
plot(acf(mcmcj$chain, lag.max = 500, plot = FALSE)$acf, ylab = "ACF", xlab = "Lags", main= 'ACF function')
jsum <- c( mean_btot, var_btot, median(Bpost_tot,space), conf(Bpost_tot,space,0.95)[1], conf(Bpost_tot,space,0.95)[2])
mcmcsum <- c( mean(mcmcu$samples), sd(mcmcu$samples)^2, cumlative_hist(h,0)[1], cumlative_hist(h,0.95)[1], cumlative_hist(h,0.95)[2])
summa <- rbind(jsum,mcmcsum)
rownames(summa) <- c('By integration','MCMC procedure')
colnames(summa) <- c('Mean', 'Variance','Median','Lower bound 95% credibility','Upper bound 95% credibility')
summa <- as.data.frame(round(summa,4))
print(summa)
n <- 116
r <- 11
N <- 1000
prob <- seq(from =0.01, to =N, by=1)/N
pe <- r/n
cat("For the frequentist approach p is:", round(pe,3))
bprior <- dbeta(prob, shape1 = 1, shape2 = 10)
like <- dbinom(x=r, size=n, prob)
Z <- PartFunc(like*bprior,1/N)
Bpost <- like*bprior/Z
cat("\nThe bayesian estimator for p is:",which.max(Bpost)*1/N, "\nThe mean and variance are:",round(sum(prob*Bpost*1/N),3),round(sum(prob*prob*Bpost*1/N)-sum(prob*Bpost*1/N)*sum(prob*Bpost*1/N),3), "\nThe 95% credibility interval is:", conf(Bpost,1/N,0.95)[1],"-", conf(Bpost,1/N,0.95)[2])
plot(prob,Bpost, type = "l", xlim= c(0,0.3), col="blue")
abline(v=c(which.max(Bpost)*1/N,sum(prob*Bpost*1/N),conf(Bpost,1/N,0.95)), col= c("black","red","darkgreen","darkgreen"))
legend(x="topright",legend=c("Posterior","Max","Mean", "95% credibility interval"), col=c("blue","black","red","darkgreen"),lty=c(1,1,1,1), cex=0.8)
real_freq <- rbinom(n=1000000, size=n, 0.1)
h <- hist(real_freq, breaks = max(real_freq) ,plot=FALSE)
h$counts <- cumsum(h$counts)
h$counts <- h$counts/h$counts[length(h$counts)]
plot(h, col = "lightblue", xaxt="n" ,xlim=c(-1,max(real_freq)), main = "Cumulative Function of Binomial (size=116,0.1)")
axis(side=1,at=h$mids,labels=seq(min(real_freq),max(real_freq)-1))
axis(side=2,at=seq(-1,1,0.1),labels=seq(-1,1,0.1))
abline(h=0.05, col="black", lty=2, lwd= 2)
cat("The null hypothsis of p= 0.1 is accepted, because we can see that 11 extractions over 116 trial is inside the 95% confidence level, because it is above the vertical line drawn at 0.05")
cat("The upper 95% confidence limit for a Uniform prior posterior is",conf_tails(Bpost, 1/N, 0.95 ,"higher" ))
cat("\nThe 95% confidence interval for a Uniform prior posterior",conf(Bpost, 1/N, 0.95))
cat("\nBayesian analysis on the Posterior \n")
cat("\nThe hypothesis test is accepted if we consider a double tail confidence interval, giving lower and upper values 0.05 - 0.151, which coincides with the hypothesis of p=0.1. On the other hand, if we take the upper tail interval, so we integrate till the 95%, we can conclude that the hypothesis test is rejected, due to the upper limit value of 0.14")
n <- 165
r <- 9
pe <- r/n
cat("For the frequentist approach p is:", round(pe,3))
bprior <- dbeta(prob, shape1 = 1, shape2 = 10)
prevprior <- Bpost
like <- dbinom(x=r, size=n, prob)
Zb <- PartFunc(like*bprior,1/N)
Zp <- PartFunc(like*prevprior,1/N)
Bpost <- like*bprior/Z
Ppost <- like*prevprior/Zp
cat("\nWith a Beta(1,10) prior")
cat("\nThe bayesian estimator for p is:",which.max(Bpost)*1/N, "\nThe mean and variance are:",sum(prob*Bpost*1/N),sum(prob*prob*Bpost*1/N)-sum(prob*Bpost*1/N)*sum(prob*Bpost*1/N), "\nThe 95% credibility interval is:", conf(Bpost,1/N,0.95),"\n" )
cat("\nWith the prior as the last posterior")
cat("\nthe bayesian estimator for p is:",which.max(Ppost)*1/N, "\nthe mean and variance are:",sum(prob*Ppost*1/N),sum(prob*prob*Ppost*1/N)-sum(prob*Ppost*1/N)*sum(prob*Ppost*1/N), "\nthe 95% credibility interval is:", conf(Ppost,1/N,0.95) )
plot(prob,Bpost, type = "l", xlim= c(0,0.2), col="blue", lwd=2, main= "Post With beta prior" )
abline(v=c(which.max(Bpost)*1/N,sum(prob*Bpost*1/N),conf(Bpost,1/N,0.95)), col= c("black","red","darkgreen","darkgreen"),lwd=c(2,2,2,2))
plot(prob,Ppost, type = "l", xlim= c(0,0.2), col="blue", lwd=2, main = "Post With prior = last posterior" )
abline(v=c(which.max(Ppost)*1/N,sum(prob*Ppost*1/N),conf(Ppost,1/N,0.95)), col= c("black","red","darkgreen","darkgreen"), lwd=c(2,2,2,2))
legend(x="topright",legend=c("Posterior","Max","Mean", "95% credibility interval"), col=c("blue","black","red","darkgreen"),lty=c(1,1,1,1), cex=0.8)
real_freq <- rbinom(n=1000000, size=n, 0.1)
h <- hist(real_freq, breaks = max(real_freq) ,plot=FALSE)
h$counts <- cumsum(h$counts)
h$counts <- h$counts/h$counts[length(h$counts)]
plot(h, col = "lightblue", xaxt="n" ,xlim=c(-1,max(real_freq)), main = "Cumulative Function of Binomial (size=165,p=0.1)")
axis(side=1,at=h$mids,labels=seq(min(real_freq),max(real_freq)-1))
axis(side=2,at=seq(-1,1,0.1),labels=seq(-1,1,0.1))
abline(h=0.05, col="black", lty=2, lwd= 2)
cat("The null hypothsis of p= 0.1 can be accepted but it is around the thresold value, because we can see that 9 extractions over 116 trial is a bit inside the 95% confidence level, because it is above the vertical line drawn at 0.05. The actual value of the bin of 9 extractions depend on the number of sampled points, so there is an uncertainty around that value.")
cat("The upper 95% confidence limit for a Beta(1,10)-prior posterior is",conf_tails(Bpost, 1/N, 0.95 ,"higher" ))
cat("\nThe upper 95% confidence limit for the last-posterrior prior posterior is",conf_tails(Ppost, 1/N, 0.95 ,"higher" ))
cat("\nThe 95% confidence interval for a Beta(1,10)-prior posterior",conf(Bpost, 1/N, 0.95))
cat("\nThe 95% confidence interval for a last-posterior prior posterior",conf(Ppost, 1/N, 0.95),"\n")
cat("\nBayesian analysis on Beta(1,10)-prior Posterior \n")
cat("\nThe hypothesis test is rejected if we consider a double tail confidence interval, giving lower and upper values 0.028 - 0.095, which coincides with the hypothesis of p=0.1. On the other hand, if we take the upper tail interval, so we integrate till the 95%, we can conclude that the hypothesis test is rejected, due to the upper limit value of 0.88\n")
cat("\nBayesian analysis on last-Posterior-Prior Posterior \n")
cat("\nThe hypothesis test is accepted if we consider a double tail confidence interval, giving lower and upper values 0.045 - 0.104, which coincides with the hypothesis of p=0.1. On the other hand, if we take the upper tail interval, so we integrate till the 95%, we can conclude that the hypothesis test is rejected, due to the upper limit value of 0.98")
library(coda)
library(rjags)
model <- "model{
# Likelihood
y ~ dbinom(theta, n)
# Prior
theta ~ dbeta(1, 1)
}"
datalist <- list(y= 9, n= 165)
jm <- jags.model(file= textConnection(model), data= datalist, n.chains = 5)
update(jm, n.iter = 1000)
Nrep = 1000000
posterior_sample <- coda.samples(jm,
variable.names = c("theta"),
n.iter = Nrep)
summary(posterior_sample)
plot(posterior_sample)
library(bayestestR)
library(tidyverse)
n <- 20
r <- 7
prob <- seq(from =0.1, to =1000, by=1)/1000
like <- dbinom(x=r, size=n, prob)
Fprior <- 1
Jprior <- dbeta(x = prob, shape1 = 1/2 , shape2 = 1/2)
Sprior <- function(x){
f <- c()
for (i in x){
if(i<0.2){
f <- append(f,i)
}
else if(0.2<i & i<0.3){
f <- append(f,0.2)
}
else if(0.3<i & i<0.5){
f <- append(f,0.5-i)
}
else{
f <- append(f,0)
}
}
return(f)
}
conf <- function(x,delta,c){
p <- 0
j <- 0
low <- 0
high <- 0
Z = sum(x*delta)
for (i in x){
p <- p+i*delta/Z
if (p>=(1-c)/2){
low <- i
break
}
#  j <- j+1
}
p <- 0
j <- 0
for (i in x){
p <- p+i*delta/Z
if (p>=c+(1-c)/2){
high <- i
break
}
# j <- j+1
}
return(c(low*delta,high*delta))
}
PartFunc <- function(x,delta){
return(sum(x*1/1000))
}
sprior <- Sprior(prob)
ZF <- PartFunc(like*Fprior,1/1000)
ZJ <- PartFunc(like*Jprior,1/1000)
ZS <- PartFunc(like*sprior,1/1000)
Fpost <- like*Fprior/(ZF)
Jpost <- like*Jprior/(ZJ)
Spost <- like*sprior/(ZS)
cat("The confidence interval for the posterior of the Unif prior is ",conf(Fpost,1/1000, 0.95),"\n")
cat("The confidence interval for the posterior of the Jeffrey prior is",conf(Jpost,1/1000, 0.95),"\n")
cat("The confidence interval for the posterior of the Step prior is",conf(Spost,1/1000, 0.95),"\n")
plot(prob,Spost, col="black",type="l",lwd=2 ,lty=1,xlab = "Probability",ylab = "Probability Density")
abline(v=conf(Spost,1/1000, 0.95), col=c("black", "black"), lty=c(1,1), lwd=c(2, 2))
lines(prob,Jpost, col="red",lty=2,lwd=2)
abline(v=conf(Jpost,1/1000, 0.95), col=c("red", "red"), lty=c(2,2), lwd=c(2, 2))
lines(prob,Fpost, col="blue",lty=3,lwd=2)
abline(v=conf(Fpost,1/1000, 0.95), col=c("blue", "blue"), lty=c(3,3), lwd=c(2, 2))
legend(x="topright",legend=c("Step-Posterior","Jeffrey-Posterior","Uniform-Posterior"), col=c("black","red","blue"),lty=c(1,2,3), cex=0.8)
x <- c("Mean","Lower 95% bound","Upper 95% bound")
jeffrey_post <- c(which.max(Jpost)*1/1000,conf(Jpost,1/1000, 0.95))
uniform_post <- c(which.max(Fpost)*1/1000,conf(Fpost,1/1000, 0.95))
step_post <- c(which.max(Spost)*1/1000,conf(Spost,1/1000, 0.95))
summ <- data.frame(x,jeffrey_post, uniform_post, step_post)
print(summ)
library(bayestestR)
library(tidyverse)
n <- 20
r <- 7
prob <- seq(from =0.1, to =1000, by=1)/1000
like <- dbinom(x=r, size=n, prob)
Fprior <- 1
Jprior <- dbeta(x = prob, shape1 = 1/2 , shape2 = 1/2)
Sprior <- function(x){
f <- c()
for (i in x){
if(i<0.2){
f <- append(f,i)
}
else if(0.2<i & i<0.3){
f <- append(f,0.2)
}
else if(0.3<i & i<0.5){
f <- append(f,0.5-i)
}
else{
f <- append(f,0)
}
}
return(f)
}
conf <- function(x,delta,c){
p <- 0
j <- 0
low <- 0
high <- 0
Z = sum(x*delta)
for (i in x){
p <- p+i*delta/Z
if (p>=(1-c)/2){
low <- j
break
}
j <- j+1
}
p <- 0
j <- 0
for (i in x){
p <- p+i*delta/Z
if (p>=c+(1-c)/2){
high <- j
break
}
j <- j+1
}
return(c(low*delta,high*delta))
}
PartFunc <- function(x,delta){
return(sum(x*1/1000))
}
sprior <- Sprior(prob)
ZF <- PartFunc(like*Fprior,1/1000)
ZJ <- PartFunc(like*Jprior,1/1000)
ZS <- PartFunc(like*sprior,1/1000)
Fpost <- like*Fprior/(ZF)
Jpost <- like*Jprior/(ZJ)
Spost <- like*sprior/(ZS)
cat("The confidence interval for the posterior of the Unif prior is ",conf(Fpost,1/1000, 0.95),"\n")
cat("The confidence interval for the posterior of the Jeffrey prior is",conf(Jpost,1/1000, 0.95),"\n")
cat("The confidence interval for the posterior of the Step prior is",conf(Spost,1/1000, 0.95),"\n")
plot(prob,Spost, col="black",type="l",lwd=2 ,lty=1,xlab = "Probability",ylab = "Probability Density")
abline(v=conf(Spost,1/1000, 0.95), col=c("black", "black"), lty=c(1,1), lwd=c(2, 2))
lines(prob,Jpost, col="red",lty=2,lwd=2)
abline(v=conf(Jpost,1/1000, 0.95), col=c("red", "red"), lty=c(2,2), lwd=c(2, 2))
lines(prob,Fpost, col="blue",lty=3,lwd=2)
abline(v=conf(Fpost,1/1000, 0.95), col=c("blue", "blue"), lty=c(3,3), lwd=c(2, 2))
legend(x="topright",legend=c("Step-Posterior","Jeffrey-Posterior","Uniform-Posterior"), col=c("black","red","blue"),lty=c(1,2,3), cex=0.8)
x <- c("Mean","Lower 95% bound","Upper 95% bound")
jeffrey_post <- c(which.max(Jpost)*1/1000,conf(Jpost,1/1000, 0.95))
uniform_post <- c(which.max(Fpost)*1/1000,conf(Fpost,1/1000, 0.95))
step_post <- c(which.max(Spost)*1/1000,conf(Spost,1/1000, 0.95))
summ <- data.frame(x,jeffrey_post, uniform_post, step_post)
print(summ)
library(bayestestR)
library(tidyverse)
n <- 20
r <- 7
prob <- seq(from =0.1, to =1000, by=1)/1000
like <- dbinom(x=r, size=n, prob)
Fprior <- 1
Jprior <- dbeta(x = prob, shape1 = 1/2 , shape2 = 1/2)
Sprior <- function(x){
f <- c()
for (i in x){
if(i<0.2){
f <- append(f,i)
}
else if(0.2<i & i<0.3){
f <- append(f,0.2)
}
else if(0.3<i & i<0.5){
f <- append(f,0.5-i)
}
else{
f <- append(f,0)
}
}
return(f)
}
conf <- function(x,delta,c){
p <- 0
j <- 0
low <- 0
high <- 0
Z = sum(x*delta)
for (i in x){
p <- p+i*delta/Z
if (p>=(1-c)/2){
low <- j
break
}
j <- j+1
}
p <- 0
j <- 0
for (i in x){
p <- p+i*delta/Z
if (p>=c+(1-c)/2){
high <- j
break
}
j <- j+1
}
return(c(low*delta,high*delta))
}
PartFunc <- function(x,delta){
return(sum(x*delta))
}
sprior <- Sprior(prob)
ZF <- PartFunc(like*Fprior,1/1000)
ZJ <- PartFunc(like*Jprior,1/1000)
ZS <- PartFunc(like*sprior,1/1000)
Fpost <- like*Fprior/(ZF)
Jpost <- like*Jprior/(ZJ)
Spost <- like*sprior/(ZS)
cat("The confidence interval for the posterior of the Unif prior is ",conf(Fpost,1/1000, 0.95),"\n")
cat("The confidence interval for the posterior of the Jeffrey prior is",conf(Jpost,1/1000, 0.95),"\n")
cat("The confidence interval for the posterior of the Step prior is",conf(Spost,1/1000, 0.95),"\n")
plot(prob,Spost, col="black",type="l",lwd=2 ,lty=1,xlab = "Probability",ylab = "Probability Density")
abline(v=conf(Spost,1/1000, 0.95), col=c("black", "black"), lty=c(1,1), lwd=c(2, 2))
lines(prob,Jpost, col="red",lty=2,lwd=2)
abline(v=conf(Jpost,1/1000, 0.95), col=c("red", "red"), lty=c(2,2), lwd=c(2, 2))
lines(prob,Fpost, col="blue",lty=3,lwd=2)
abline(v=conf(Fpost,1/1000, 0.95), col=c("blue", "blue"), lty=c(3,3), lwd=c(2, 2))
legend(x="topright",legend=c("Step-Posterior","Jeffrey-Posterior","Uniform-Posterior"), col=c("black","red","blue"),lty=c(1,2,3), cex=0.8)
x <- c("Mean","Lower 95% bound","Upper 95% bound")
jeffrey_post <- c(which.max(Jpost)*1/1000,conf(Jpost,1/1000, 0.95))
uniform_post <- c(which.max(Fpost)*1/1000,conf(Fpost,1/1000, 0.95))
step_post <- c(which.max(Spost)*1/1000,conf(Spost,1/1000, 0.95))
summ <- data.frame(x,jeffrey_post, uniform_post, step_post)
print(summ)
mat <- cbind(c(1,1,1,1,1),c(1,1,1,1,0),c(1,1,1,0,0),c(1,1,0,0,0),c(1,0,0,0,0),c(0,0,0,0,0))
box <- sample(1:6,1)
ph_e <- c(1,1,1,1,1,1)/6
ph_et <- c(1,1,1,1,1,1)/6
e <- 40
ex_balls <- c("N")
for (j in 1:e){
ball <- sample(1:6,1)
ext <- mat[ball,box]
if(ext == 1){
ex_balls <- append(ex_balls,"B")
}
else{
ex_balls <- append(ex_balls,"W")
}
for (i in 1:6){
ph_e[i] <- length(mat[,i][mat[,i] == ext])/5 * ph_e[i]
}
ph_e <- ph_e/sum(ph_e)
ph_et <- rbind(ph_et,ph_e)
}
mat <- cbind(c(1,1,1,1,1),c(1,1,1,1,0),c(1,1,1,0,0),c(1,1,0,0,0),c(1,0,0,0,0),c(0,0,0,0,0))
box <- sample(1:6,1)
ph_e <- c(1,1,1,1,1,1)/6
ph_et <- c(1,1,1,1,1,1)/6
e <- 40
ex_balls <- c("N")
for (j in 1:e){
ball <- sample(1:5,1)
ext <- mat[ball,box]
if(ext == 1){
ex_balls <- append(ex_balls,"B")
}
else{
ex_balls <- append(ex_balls,"W")
}
for (i in 1:6){
ph_e[i] <- length(mat[,i][mat[,i] == ext])/5 * ph_e[i]
}
ph_e <- ph_e/sum(ph_e)
ph_et <- rbind(ph_et,ph_e)
}
par(mfrow=c(2,3))
Extractions <- seq(from =0, to = e, by=1)
plot(Extractions,ph_et[,1], col="blue",type="l",lwd=2 , ylim=c(0,1) ,lty=1,main = "Box H0", ylab = "Probability")
plot(Extractions,ph_et[,2], col="black",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H1" , ylab = "Probability")
plot(Extractions,ph_et[,3], col="red",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H2", ylab = "Probability" )
plot(Extractions,ph_et[,4], col="darkgreen",type="l",lwd=2 , ylim=c(0,1),lty=1,main = "Box H3", ylab = "Probability")
plot(Extractions,ph_et[,5], col="orange",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H4", ylab = "Probability" )
plot(Extractions,ph_et[,6], col="brown",type="l",lwd=2 , ylim=c(0,1),lty=1,main = "Box H5", ylab = "Probability")
cat("The real box tossed is H",box-1,"\n")
cat("Probabilities of each box at the",e,"th trial is\nH0 =",ph_et[e,1],"\nH1 =",ph_et[e,2],"\nH2 =",ph_et[e,3],"\nH3 =",ph_et[e,4],"\nH4 =",ph_et[e,5],"\nH5 =",ph_et[e,6])
mat <- cbind(c(1,1,1,1,1),c(1,1,1,1,0),c(1,1,1,0,0),c(1,1,0,0,0),c(1,0,0,0,0),c(0,0,0,0,0))
box <- sample(1:6,1)
ph_e <- c(1,1,1,1,1,1)/6
ph_et <- c(1,1,1,1,1,1)/6
e <- 40
ex_balls <- c("N")
for (j in 1:e){
ball <- sample(1:5,1)
ext <- mat[ball,box]
if(ext == 1){
ex_balls <- append(ex_balls,"B")
}
else{
ex_balls <- append(ex_balls,"W")
}
for (i in 1:6){
ph_e[i] <- length(mat[,i][mat[,i] == ext])/5 * ph_e[i]
}
ph_e <- ph_e/sum(ph_e)
ph_et <- rbind(ph_et,ph_e)
}
par(mfrow=c(2,3))
Extractions <- seq(from =0, to = e, by=1)
plot(Extractions,ph_et[,1], col="blue",type="l",lwd=2 , ylim=c(0,1) ,lty=1,main = "Box H0", ylab = "Probability")
plot(Extractions,ph_et[,2], col="black",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H1" , ylab = "Probability")
plot(Extractions,ph_et[,3], col="red",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H2", ylab = "Probability" )
plot(Extractions,ph_et[,4], col="darkgreen",type="l",lwd=2 , ylim=c(0,1),lty=1,main = "Box H3", ylab = "Probability")
plot(Extractions,ph_et[,5], col="orange",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H4", ylab = "Probability" )
plot(Extractions,ph_et[,6], col="brown",type="l",lwd=2 , ylim=c(0,1),lty=1,main = "Box H5", ylab = "Probability")
cat("The real box tossed is H",box-1,"\n")
cat("Probabilities of each box at the",e,"th trial is\nH0 =",ph_et[e,1],"\nH1 =",ph_et[e,2],"\nH2 =",ph_et[e,3],"\nH3 =",ph_et[e,4],"\nH4 =",ph_et[e,5],"\nH5 =",ph_et[e,6])
mat <- cbind(c(1,1,1,1,1),c(1,1,1,1,0),c(1,1,1,0,0),c(1,1,0,0,0),c(1,0,0,0,0),c(0,0,0,0,0))
box <- sample(1:6,1)
ph_e <- c(1,1,1,1,1,1)/6
ph_et <- c(1,1,1,1,1,1)/6
e <- 40
ex_balls <- c("N")
for (j in 1:e){
ball <- sample(1:5,1)
ext <- mat[ball,box]
if(ext == 1){
ex_balls <- append(ex_balls,"B")
}
else{
ex_balls <- append(ex_balls,"W")
}
for (i in 1:6){
ph_e[i] <- length(mat[,i][mat[,i] == ext])/5 * ph_e[i]
}
ph_e <- ph_e/sum(ph_e)
ph_et <- rbind(ph_et,ph_e)
}
par(mfrow=c(2,3))
Extractions <- seq(from =0, to = e, by=1)
plot(Extractions,ph_et[,1], col="blue",type="l",lwd=2 , ylim=c(0,1) ,lty=1,main = "Box H0", ylab = "Probability")
plot(Extractions,ph_et[,2], col="black",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H1" , ylab = "Probability")
plot(Extractions,ph_et[,3], col="red",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H2", ylab = "Probability" )
plot(Extractions,ph_et[,4], col="darkgreen",type="l",lwd=2 , ylim=c(0,1),lty=1,main = "Box H3", ylab = "Probability")
plot(Extractions,ph_et[,5], col="orange",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H4", ylab = "Probability" )
plot(Extractions,ph_et[,6], col="brown",type="l",lwd=2 , ylim=c(0,1),lty=1,main = "Box H5", ylab = "Probability")
cat("The real box tossed is H",box-1,"\n")
cat("Probabilities of each box at the",e,"th trial is\nH0 =",ph_et[e,1],"\nH1 =",ph_et[e,2],"\nH2 =",ph_et[e,3],"\nH3 =",ph_et[e,4],"\nH4 =",ph_et[e,5],"\nH5 =",ph_et[e,6])
mat <- cbind(c(1,1,1,1,1),c(1,1,1,1,0),c(1,1,1,0,0),c(1,1,0,0,0),c(1,0,0,0,0),c(0,0,0,0,0))
box <- sample(1:6,1)
ph_e <- c(1,1,1,1,1,1)/6
ph_et <- c(1,1,1,1,1,1)/6
e <- 40
ex_balls <- c("N")
for (j in 1:e){
ball <- sample(1:5,1)
ext <- mat[ball,box]
if(ext == 1){
ex_balls <- append(ex_balls,"B")
}
else{
ex_balls <- append(ex_balls,"W")
}
for (i in 1:6){
ph_e[i] <- length(mat[,i][mat[,i] == ext])/5 * ph_e[i]
}
ph_e <- ph_e/sum(ph_e)
ph_et <- rbind(ph_et,ph_e)
}
par(mfrow=c(2,3))
Extractions <- seq(from =0, to = e, by=1)
plot(Extractions,ph_et[,1], col="blue",type="l",lwd=2 , ylim=c(0,1) ,lty=1,main = "Box H0", ylab = "Probability")
plot(Extractions,ph_et[,2], col="black",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H1" , ylab = "Probability")
plot(Extractions,ph_et[,3], col="red",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H2", ylab = "Probability" )
plot(Extractions,ph_et[,4], col="darkgreen",type="l",lwd=2 , ylim=c(0,1),lty=1,main = "Box H3", ylab = "Probability")
plot(Extractions,ph_et[,5], col="orange",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H4", ylab = "Probability" )
plot(Extractions,ph_et[,6], col="brown",type="l",lwd=2 , ylim=c(0,1),lty=1,main = "Box H5", ylab = "Probability")
cat("The real box tossed is H",box-1,"\n")
cat("Probabilities of each box at the",e,"th trial is\nH0 =",ph_et[e,1],"\nH1 =",ph_et[e,2],"\nH2 =",ph_et[e,3],"\nH3 =",ph_et[e,4],"\nH4 =",ph_et[e,5],"\nH5 =",ph_et[e,6])
mat <- cbind(c(1,1,1,1,1),c(1,1,1,1,0),c(1,1,1,0,0),c(1,1,0,0,0),c(1,0,0,0,0),c(0,0,0,0,0))
box <- sample(1:6,1)
ph_e <- c(1,1,1,1,1,1)/6
ph_et <- c(1,1,1,1,1,1)/6
e <- 40
ex_balls <- c("N")
for (j in 1:e){
ball <- sample(1:5,1)
ext <- mat[ball,box]
if(ext == 1){
ex_balls <- append(ex_balls,"B")
}
else{
ex_balls <- append(ex_balls,"W")
}
for (i in 1:6){
ph_e[i] <- length(mat[,i][mat[,i] == ext])/5 * ph_e[i]
}
ph_e <- ph_e/sum(ph_e)
ph_et <- rbind(ph_et,ph_e)
}
par(mfrow=c(2,3))
Extractions <- seq(from =0, to = e, by=1)
plot(Extractions,ph_et[,1], col="blue",type="l",lwd=2 , ylim=c(0,1) ,lty=1,main = "Box H0", ylab = "Probability")
plot(Extractions,ph_et[,2], col="black",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H1" , ylab = "Probability")
plot(Extractions,ph_et[,3], col="red",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H2", ylab = "Probability" )
plot(Extractions,ph_et[,4], col="darkgreen",type="l",lwd=2 , ylim=c(0,1),lty=1,main = "Box H3", ylab = "Probability")
plot(Extractions,ph_et[,5], col="orange",type="l",lwd=2 , ylim=c(0,1),lty=1,main ="Box H4", ylab = "Probability" )
plot(Extractions,ph_et[,6], col="brown",type="l",lwd=2 , ylim=c(0,1),lty=1,main = "Box H5", ylab = "Probability")
cat("The real box tossed is H",box-1,"\n")
cat("Probabilities of each box at the",e,"th trial is\nH0 =",ph_et[e,1],"\nH1 =",ph_et[e,2],"\nH2 =",ph_et[e,3],"\nH3 =",ph_et[e,4],"\nH4 =",ph_et[e,5],"\nH5 =",ph_et[e,6])
?pnorm
